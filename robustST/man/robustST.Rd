% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/robustST.R
\name{robustST}
\alias{robustST}
\title{Fit a robust Skew-t}
\usage{
robustST(y, x = matrix(1, nrow = NROW(y)), robust = T,
  method = c("nlminb", "constrOptim"), w = rep(1, nrow(x)), k = 10,
  start = NULL)
}
\arguments{
\item{y}{A vector or matrix of observations to fit the skew-t to.}

\item{x}{A matrix of ones, or matrix of independent variables for skew-t
regression (use caution, as this feature has not been tested!)}

\item{robust}{Should the robust estimator be used?}

\item{w}{A vector of case weights, defaults to a vector of ones.}

\item{k}{A parameter controlling the "robustness" of the fit.  The maximum
value for the negative log-likelihood for any observation is 2*k.  Thus, as
k->Inf the estimator approaches the MLE.  k values around 8 or 10 seem to
perform well.}

\item{start}{The starting values for the optimization.  If NULL, reasonable
values are automatically chosen.}

\item{method:}{constrOptim uses a constrained algorithm, forcing nu and
omega>0.  However, the implementation for multivariate skew-t fitting
enforces this by default, so nlminb and constrOptim should be very similar
for multivariate data.  For univariate, constrOptim is recommended.  For
multivariate, constrOptim is also recommended as it appears to be faster.}
}
\value{
A named list containing the results of the fit.  beta vector is
equivalent to the mean estimate if x = matrix of 1's, and omega/alpha/nu
are the parameters of the skew-t.  A convergence flag is also returned,
indicating if the solution is a true optimum.
}
\description{
Fits a robust version of the multivariate skew-t, done by bounding the
negative log-likelihood for each observation.
}

